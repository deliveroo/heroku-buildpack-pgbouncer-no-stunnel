#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

# debug
# set -x

# clean up leaking environment
unset GIT_DIR

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"

function error() {
  echo " !     $*" >&2
  exit 1
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function package_download() {
  location="$1"

  mkdir -p $location
  package="https://github.com/deliveroo/heroku-buildpack-pgbouncer-no-stunnel/raw/master/support/pgbouncer-1.7.2.tgz"
  curl $package -L -s -o - | tar xzf - -C $location
}

# vendor directories
VENDORED_PGBOUNCER="vendor/pgbouncer"

# vendor pgbouncer into the slug
PATH="$BUILD_DIR/$VENDORED_PGBOUNCER/bin:$PATH"
echo "-----> Fetching and vendoring pgbouncer into slug"
mkdir -p "$BUILD_DIR/$VENDORED_PGBOUNCER"
package_download "${BUILD_DIR}/${VENDORED_PGBOUNCER}"

chmod +x "$BUILD_DIR/$VENDORED_PGBOUNCER/bin/pgbouncer"
PGBOUNCER_VERSION=`"$BUILD_DIR/$VENDORED_PGBOUNCER/bin/pgbouncer" --version`
echo "${PGBOUNCER_VERSION}" | indent

echo "-----> Moving the configuration generation script into app/bin"
mkdir -p $BUILD_DIR/bin
cp "$BUILDPACK_DIR/bin/gen-pgbouncer-conf.sh" $BUILD_DIR/bin
chmod +x $BUILD_DIR/bin/gen-pgbouncer-conf.sh

echo "-----> Moving the start-pgbouncer script into app/bin"
mkdir -p $BUILD_DIR/bin
cp "$BUILDPACK_DIR/bin/start-pgbouncer" $BUILD_DIR/bin/
chmod +x $BUILD_DIR/bin/start-pgbouncer

echo "-----> pgbouncer done"
